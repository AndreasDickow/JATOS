# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Public
POST    /ma/logError                          controllers.Publix.logError()
GET     /ma/:studyId/start                    controllers.Publix.startStudy(studyId: Long, workerId: String ?= null, assignmentId: String ?= null, hitId: String ?= null)
GET     /ma/:studyId/end                      controllers.Publix.endStudy(studyId: Long)
GET     /ma/:studyId/:componentId             controllers.Publix.getComponentData(studyId: Long, componentId: Long)
POST    /ma/:studyId/:componentId             controllers.Publix.submitResult(studyId: Long, componentId: Long)
POST    /ma/:studyId/:componentId/start       controllers.Publix.startComponent(studyId: Long, componentId: Long)
POST    /ma/:studyId/:componentId/end         controllers.Publix.endComponent(studyId: Long, componentId: Long)
GET     /ma/:studyId/:componentId/nextUrl     controllers.Publix.getNextComponentUrl(studyId: Long, componentId: Long)
GET     /ma/:studyId/:componentId/url         controllers.Publix.getComponentUrl(studyId: Long, componentId: Long)

# Admin
GET     /admin/login                                 controllers.Admin.login()
POST    /admin/login                                 controllers.Admin.authenticate()
GET     /admin/logout                                controllers.Admin.logout()
GET     /admin                                       controllers.Admin.dashboard()
GET     /admin/                                      controllers.Admin.dashboard()
GET     /                                            controllers.Admin.dashboard()
GET     /admin/user/create                           controllers.Users.create()
POST    /admin/user/create                           controllers.Users.submit()
GET     /admin/user/:email/editProfile               controllers.Users.editProfile(email: String)
POST    /admin/user/:email/editProfile               controllers.Users.submitEditedProfile(email: String)
GET     /admin/user/:email/changePassword            controllers.Users.changePassword(email: String)
POST    /admin/user/:email/changePassword            controllers.Users.submitChangedPassword(email: String)
GET     /admin/user/:email                           controllers.Users.profile(email: String)
GET     /admin/user/:email/                          controllers.Users.profile(email: String)
GET     /admin/createStudy                           controllers.Studies.create()
POST    /admin/createStudy                           controllers.Studies.submit()
GET     /admin/:studyId/properties                   controllers.Studies.properties(studyId: Long)
POST    /admin/:studyId/properties                   controllers.Studies.submitProperties(studyId: Long)
GET     /admin/:studyId/changeMembers                controllers.Studies.changeMembers(studyId: Long)
POST    /admin/:studyId/changeMembers                controllers.Studies.submitChangedMembers(studyId: Long)
DELETE  /admin/:studyId/remove                       controllers.Studies.remove(studyId: Long)
POST    /admin/:studyId/changeComponentOrder         controllers.Studies.changeComponentOrder(studyId: Long, componentId: Long, direction: String)
GET     /admin/:studyId/mturk                        controllers.Studies.showMTurkSourceCode(studyId: Long)
GET     /admin/:studyId                              controllers.Studies.index(studyId: Long)
GET     /admin/:studyId/                             controllers.Studies.index(studyId: Long)
GET     /admin/:studyId/createComponent              controllers.Components.create(studyId: Long)
POST    /admin/:studyId/createComponent              controllers.Components.submit(studyId: Long)
GET     /admin/:studyId/:componentId/edit            controllers.Components.edit(studyId: Long, componentId: Long)
POST    /admin/:studyId/:componentId/edit            controllers.Components.submitEdited(studyId: Long, componentId: Long)
GET     /admin/:studyId/:componentId/removeResults   controllers.Components.removeResults(studyId: Long, componentId: Long)
POST    /admin/:studyId/:componentId/removeResults   controllers.Components.submitRemovedResults(studyId: Long, componentId: Long)
DELETE  /admin/:studyId/:componentId/remove          controllers.Components.remove(studyId: Long, componentId: Long)
GET     /admin/:studyId/:componentId/try             controllers.Components.tryComponent(studyId: Long, componentId: Long)
GET     /admin/:studyId/:componentId                 controllers.Components.index(studyId: Long, componentId: Long)
GET     /admin/:studyId/:componentId/                controllers.Components.index(studyId: Long, componentId: Long)

# Static resources (not managed by the Play framework) from the /public folder
GET     /assets/*file             controllers.Assets.at(path="/public", file)
GET     /studies/*file            controllers.Assets.at(path="/public/studies", file)
