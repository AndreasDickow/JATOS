# This is the base configuration file for the JATOS. It is packed in JATOS' jar.
# To config JATOS individually use production.conf.
# ~~~~~

# General config
# ~~~~~
play.i18n.langs = ["en", "en-US"]


# HTTP server config
# ~~~~~

# Host address and port
# Default are 0.0.0.0 and 9000
play.server {
  http.address = ${?http.address}
  http.address = ${?JATOS_HTTP_ADDRESS}
  http.port = 9000
  http.port = ${?http.port}
  http.port = ${?JATOS_HTTP_PORT}

  # The time after which an idle connection will be automatically closed.
  # Set to `infinite` to completely disable idle connection timeouts.
  http.idleTimeout = infinite

  # How long a request takes until it times out. Set to null or "infinite" to disable the timeout.
  akka.requestTimeout = infinite
}
play.http {

  # Add a base URL to the root of the application path (default is "/")
  context = "/"
  context = ${?JATOS_URL_BASE_PATH}

  errorHandler = "general.ErrorHandler"

  # File upload
  parser.maxDiskBuffer = 2048MB

  # Request body size
  parser.maxMemoryBuffer = 2048MB

  # Secure session cookie (set true to restrict user access to HTTPS)
  session.secure = false
}


# JATOS' configuration
jatos {

  # JATOS' study assets root directory path
  # Default is ./study_assets_root
  # Can be set by env variable JATOS_STUDY_ASSETS_ROOT_PATH or via command line args
  studyAssetsRootPath = "study_assets_root"
  studyAssetsRootPath = ${?JATOS_STUDY_ASSETS_ROOT_PATH}

  studyLogs.enabled = true
  # Path where JATOS stores its logs for each study
  # Default is ./study_logs
  # Can be set by env variable JATOS_STUDY_LOGS_PATH or via command line args
  studyLogs.path = "study_logs"
  studyLogs.path = ${?JATOS_STUDY_LOGS_PATH}

  resultUploads.enabled = true
  # Path where JATOS stores uploads from study runs
  # Default is ./result_uploads
  # Can be set by env variable JATOS_RESULT_UPLOADS_PATH or via command line args
  resultUploads.path = "result_uploads"
  resultUploads.path = ${?JATOS_RESULT_UPLOADS_PATH}
  # Max file size
  resultUploads.maxFileSize = 30MB
  resultUploads.maxFileSize = ${?JATOS_RESULT_UPLOADS_MAX_FILE_SIZE}
  # Limit of all files per study run
  resultUploads.limitPerStudyRun = 50MB
  resultUploads.limitPerStudyRun = ${?JATOS_RESULT_UPLOADS_LIMIT_PER_STUDY_RUN}

  # Max size of result data of one component result
  resultData.maxSize = 5MB

  # Maximal number of results to be fetched from the DB at once
  maxResultsDbQuerySize = 1000

  # User session configuration: timeout in minutes
  userSession.timeout = 1440
  # User session configuration: timeout after inactivity in minutes
  userSession.inactivity = 60
  # User session validation: WARNING! setting to false switches off the user session validation
  # By default it's set to false to let users use a local JATOS easily - but on a server installation it should be set to true
  userSession.validation = false

  # Password length restriction
  user.password.length = 7
  # Password strength: one of the following
  #   0: No restrictions on characters
  #   1: At least one Latin letter and one number
  #   2: At least one Latin letter, one number and one special character (#?!@$%^&*-)
  #   3: At least one uppercase Latin letter, one lowercase Latin letter, one number and one special character (#?!@$%^&*-)
  user.password.strength = 0

  user.authentication.ldap {
    # LDAP url (e.g. "ldap://ldap.forumsys.com:389")
    url = ""
    # LDAP base DN(s) (distinguished name)
    # Can be one DN with a single string (e.g. "ou=students,dc=example,dc=com") or a list of DNs
    # (e.g. ["ou=students,dc=example,dc=com", "ou=scientists,dc=example,dc=com"])
    basedn = ""
    # DN (distinguished name) of an admin user that has the right to search LDAP for other users
    admin.dn = ""
    # Password of the admin user
    admin.password = ""
    # Timout for waiting for response from LDAP server
    timeout = 5000
  }

  # Google OAuth client ID (https://developers.google.com/identity/sign-in/web/sign-in)
  user.authentication.oauth.googleClientId = ""

  # Allow giving the role SUPERUSER to a user. This role allows a user to access ANY study as if they were
  # a study member (incl accessing result data or deleting the study)
  user.role.allowSuperuser = false

  # A message sent by the loader script after an update attempt
  update.msg = null
  update.msg = ${?JATOS_UPDATE_MSG}

  # If true the IDCookies' 'secure' attribute is set (similar play.server.session.secure)
  idCookies.secure = false

  # Defines the IDCookies' 'SameSite' attribute: 'None', 'Lax', or 'Strict'
  idCookies.sameSite = "None"

  # JATOS GUI - Show donations button in GUI
  donationAllowed = false

  # JATOS GUI - URL link to the 'terms of use' that will be shown in a info box on the home page
  # If empty it's not shown
  termsOfUseUrl = ""

  # JATOS GUI - URL to some static HTML that will be shown on the home page instead of the default welcome message.
  # If empty the default welcome message is shown.
  brandingUrl = ""

  # JATOS GUI - Allow to add all users that exist on this JATOS server to be added at once as members of a study
  studyMembers.allowAddAllUsers = false

  # JATOS GUI - Show certain columns in the study admin page. Sometimes the file system or the database is too slow
  # to calculate all this.
  studyAdmin.showStudyAssetsSize = true
  studyAdmin.showResultDataSize = true
  studyAdmin.showResultFileSize = true
}

# Play module configuration
# ~~~~~
play.modules {

  # JATOS has its own Jackson JSON ObjectMapper
  disabled += "play.core.ObjectMapperModule"

  # Guice config (dependency injection)
  enabled += "general.GuiceModule"
  enabled += "general.common.CommonGuiceModule"
  enabled += "general.publix.PublixGuiceModule"
}

# Database configuration
# Default is H2
# JATOS uses Play's Evolutions for auto DB evolution
# Can be overwritten by env variables or via command line args
#   JATOS_DB_URL - JDBC URL to the db
#   JATOS_DB_DRIVER - either org.h2.Driver or com.mysql.jdbc.Driver
#   JATOS_DB_USERNAME and JATOS_DB_PASSWORD - username and password of the db
# ~~~~~
db {
  default.url = "jdbc:h2:./database/jatos;MODE=MYSQL;DATABASE_TO_UPPER=FALSE;IGNORECASE=TRUE;DEFAULT_LOCK_TIMEOUT=10000;SELECT_FOR_UPDATE_MVCC=FALSE"
  default.url = ${?JATOS_DB_URL}
  default.driver = "org.h2.Driver"
  default.driver = ${?JATOS_DB_DRIVER}
  default.jndiName = "DefaultDS"
  default.username = ${?JATOS_DB_USERNAME}
  default.password = ${?JATOS_DB_PASSWORD}
}
jpa {
  default = "mysqlPersistenceUnit"
}
play.evolutions {
  enabled = true
  autoApply = true
}

# Play's application secret
# The loader.sh/.bat generate a secret the first time JATOS starts. So
# usually there is no need to set it manually. Anyway, it can be set
# via environment variable JATOS_SECRET, or in another conf file
# like production.conf, or via a -Dplay.http.secret.key parameter,
# or by env variable JATOS_SECRET.
# This default secret here is only for development and must not be
# used in production.
# ~~~~~
play.http.secret {
  key = "zj97lcqp896QDatUyDicMfZdAsGeTivm72pq3p52nLfDxMTDCfuKjGoc4Rj"
  key = ${?JATOS_SECRET}
}


# Akka configuration
# ~~~~~
akka {
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
}


# Filter configuration
# https://github.com/techmonad/play-cors-example/blob/master/conf/application.conf
# ~~~~~
play.filters {
  disabled += play.filters.csrf.CSRFFilter
  #enabled += play.filters.gzip.GzipFilter
  enabled += play.filters.csp.CSPFilter
  enabled += play.filters.cors.CORSFilter

  csp.directives {
    base-uri = "'self'"
  }

  csp.nonce {
    # Use nonce value (generated and passed in through request attribute)
    enabled = true

    # Pattern to use to replace with nonce
    pattern = "%CSP_NONCE_PATTERN%"

    # Add the nonce to "X-Content-Security-Policy-Nonce" header.  This is useful for debugging.
    header = false
  }

  cors {
    exposedHeaders = ["Content-Disposition"]
    allowedOrigins = ["https://editor.swagger.io", "localhost:9000"]
  }

  hosts {
    allowed = ["localhost", "."]
  }

  # Security headers filter configuration
  headers {
    # The X-Frame-Options header
    frameOptions = "SAMEORIGIN"

    # Default is 'nosniff' - but we have to allow content-type sniffing for the study assets
    contentTypeOptions = null
  }
}


# Cache config
# ~~~~~
play.cache {
  bindCaches = ["user-session-cache"]
  createBoundCaches = false
}

# Play's assets configuration
# ~~~~~
play.assets.cache."/public/lib/jatos-publix/javascripts/"="private"
