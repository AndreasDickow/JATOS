# This is the base configuration file for the JATOS. It is packed in JATOS' jar.
# To config JATOS individually use production.conf.
# ~~~~~

# General config
# ~~~~~
play.i18n.langs = ["en", "en-US"]


# HTTP server config
# ~~~~~

# Host address and port
# Default are 0.0.0.0 and 9000
play.server {
  http.address = ${?http.address}
  http.address = ${?JATOS_HTTP_ADDRESS}
  http.port = 9000
  http.port = ${?http.port}
  http.port = ${?JATOS_HTTP_PORT}
}
play.http {

  # Add a base URL to the root of the application path (default is "/")
  context = "/"
  context = ${?JATOS_URL_BASE_PATH}

  errorHandler = "general.ErrorHandler"

  # File upload
  parser.maxDiskBuffer = 2048MB

  # Request body size
  parser.maxMemoryBuffer = 2048MB

  # Secure session cookie (set true to restrict user access to HTTPS)
  session.secure = false
}
parsers {

  # Request body size
  anyContent.maxLength = 10MB
  MultipartFormData.maxLength = 10MB
}


# JATOS' configuration
# If adding one here you should add it in test.html too
jatos {

  # JATOS' study assets root directory path
  # Default is ./study_assets_root
  # Can be set by env variable JATOS_STUDY_ASSETS_ROOT_PATH or via command line args
  studyAssetsRootPath = study_assets_root
  studyAssetsRootPath = ${?JATOS_STUDY_ASSETS_ROOT_PATH}

  studyLogs.enabled = true
  # Path where JATOS stores its logs for each study
  # Default is ./study_logs
  studyLogs.path = study_logs

  # User session configuration: timeout in minutes
  userSession.timeout = 1440
  # User session configuration: timeout after inactivity in minutes
  userSession.inactivity = 60
  # User session validation: WARNING! setting to false switches off the user session validation
  userSession.validation = true

  # Password length restriction
  user.password.length = 7
  # Password strength: one of the following
  #   0: No restrictions on characters
  #   1: At least one Latin letter and one number
  #   2: At least one Latin letter, one number and one special character (#?!@$%^&*-)
  #   3: At least one uppercase Latin letter, one lowercase Latin letter, one number and one special character (#?!@$%^&*-)
  user.password.strength = 0

  # A message sent by the loader script after an update attempt
  update.msg = null
  update.msg = ${?JATOS_UPDATE_MSG}
}

# Play module configuration
# ~~~~~
play.modules {

  # JATOS has its own Jackson JSON ObjectMapper
  disabled += "play.core.ObjectMapperModule"

  # Guice config (dependency injection)
  enabled += "general.GuiceModule"
  enabled += "general.common.CommonGuiceModule"
  enabled += "general.publix.PublixGuiceModule"
}

# Database configuration
# Default is H2
# JATOS uses Play's Evolutions for auto DB evolution
# Can be overwritten by env variables or via command line args
#   JATOS_DB_URL - JDBC URL to the db
#   JATOS_DB_DRIVER - either org.h2.Driver or com.mysql.jdbc.Driver
#   JATOS_DB_USERNAME and JATOS_DB_PASSWORD - username and password of the db
#   JATOS_JPA - either h2PersistenceUnit or mysqlPersistenceUnit
# ~~~~~
db {
  default.url = "jdbc:h2:./database/jatos;MODE=MYSQL;DATABASE_TO_UPPER=FALSE;IGNORECASE=TRUE"
  default.url = ${?JATOS_DB_URL}
  default.driver = org.h2.Driver
  default.driver = ${?JATOS_DB_DRIVER}
  default.jndiName = DefaultDS
  default.username = ${?JATOS_DB_USERNAME}
  default.password = ${?JATOS_DB_PASSWORD}
}
jpa {
  default = h2PersistenceUnit
  default = ${?JATOS_JPA}
}
play.evolutions {
  enabled = true
  db.default.autoApply = true
}

# Play's application secret
# Can be set via environment variable JATOS_SECRET, or in another conf file
# like production.conf, or via a -Dplay.http.secret.key parameter.
# This secret here must not be used in production.
# Can be set by env variable JATOS_SECRET
# ~~~~~
play.http.secret {
  key = "zj97lcqp896QDatUyDicMfZdAsGeTivm72pq3p52nLfDxMTDCfuKjGoc4Rj"
  key = ${?JATOS_SECRET}
}


# Akka configuration
# ~~~~~
akka {
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
}


# Filter configuration
# https://github.com/techmonad/play-cors-example/blob/master/conf/application.conf
# ~~~~~
play.filters {

  disabled += play.filters.csrf.CSRFFilter

  hosts {
    allowed = ["localhost", "."]
  }

  # Security headers filter configuration
  headers {
    # The X-Frame-Options header
    frameOptions = "SAMEORIGIN"

    # The Content-Security-Policy header. If null, the header is not set.
    contentSecurityPolicy = null
  }
}


# Cache config
# ~~~~~
play.cache {
  bindCaches = ["user-session-cache"]
  createBoundCaches = false
}
