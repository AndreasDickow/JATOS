openapi: 3.0.3
info:
  title: JATOS API
  description: 'This is JATOS API specification using OpenAPI.'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about JATOS
  url: https://www.jatos.org
servers:
  - url: http://localhost:9000

paths:
  /jatos/api/admin/status:
    get:
      summary: Get the status of your JATOS (for admin tokens only)
      tags:
        - admin
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/admin/token:
    get:
      summary: Get details of the token used in this request
      tags:
        - admin
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/admin/logs/{filename}:
    get:
      summary: Returns the log file specified by 'filename' (for admin tokens only)
      tags:
        - admin
      parameters:
        - in: path
          name: filename
          required: true
          schema:
            type: string
          description: Filename of the log file (e.g. application.log, loader.log, update.log)
      responses:
        200:
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        401:
          description: Invalid token

  /jatos/api/study:
    post:
      summary: Import a study
      tags:
        - study
      parameters:
        - in: query
          name: overwriteProperties
          required: false
          schema:
            type: boolean
          description: If the study exists already in JATOS, should the study properties be overwritten? Default is true. If the study doesn't exist already this parameter has no effect.
        - in: query
          name: overwriteDir
          required: false
          schema:
            type: boolean
          description: If the study exists already in JATOS, should the study assets directory be overwritten? Default is true. If the study doesn't exist already this parameter has no effect.
        - in: query
          name: keepCurrentDirName
          required: false
          schema:
            type: boolean
          description: If the study exists already in JATOS and the current study assets directory name is different from the uploaded one, should the current directory name be kept? Default is true. If the study doesn't already exist or both names are the same this parameter has no effect.
        - in: query
          name: renameDir
          required: false
          schema:
            type: boolean
          description: If the study assets directory exists already in JATOS but belongs to a different study you can set this parameter to true to let JATOS choose a new directory name for your study (usually name + '_' + number). Default is true. If the study directory doesn't exist already and is from a different study this parameter has no effect.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                study:
                  type: string
                  format: binary
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/studies/{studyId}:
    get:
      summary: Export a study
      tags:
        - study
      parameters:
        - in: path
          name: studyId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Study ID
      responses:
        200:
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
        401:
          description: Invalid token

  /jatos/api/studies/{studyId}/log:
    get:
      summary: Get the study log of a study
      tags:
        - study
      parameters:
        - in: path
          name: studyId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Study ID
      responses:
        200:
          description: Success
          content:
            application/jsonlines:
              schema:
                type: object
        401:
          description: Invalid token


  /jatos/api/studies/{studyId}/studyAssetsSize:
    get:
      summary: Get the size of the study asset folder belonging to the study
      tags:
        - study
      parameters:
        - in: path
          name: studyId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Study ID
      responses:
        200:
          description: Success (size in bytes)
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/studies/{studyId}/resultDataSize:
    get:
      summary: Get the size of all result data belonging to the study
      tags:
        - study
      parameters:
        - in: path
          name: studyId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Study ID
      responses:
        200:
          description: Success (size in bytes)
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/studies/{studyId}/resultFileSize:
    get:
      summary: Get the size of all result files belonging to the study
      tags:
        - study
      parameters:
        - in: path
          name: studyId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Study ID
      responses:
        200:
          description: Success (size in bytes)
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/workers:
    get:
      summary: Get overview data of all workers that belong to a study
      description: All worker types except the internal Jatos worker type
      tags:
        - study
      parameters:
        - in: query
          name: studyId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Study ID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/studyCodes:
    get:
      summary: Get one or multiple study codes
      tags:
        - study
      parameters:
        - in: query
          name: studyId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Study ID
        - in: query
          name: batchId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Batch ID
        - in: query
          name: type
          required: true
          schema:
            type: string
          description: Type - one of 'PersonalSingle' (or 'ps'), 'PersonalMultiple' (or 'pm'), 'GeneralSingle' (or 'gs'), 'GeneralMultiple' (or 'gm'), 'MTurk' (or 'mt')
        - in: query
          name: comment
          required: false
          schema:
            type: string
          description: Some identifying description or name (only for type 'PersonalSingle' or 'PersonalMultiple'). Can be left empty.
        - in: query
          name: amount
          required: false
          schema:
            type: integer
          description: Number of study codes to be created (only for type 'PersonalSingle' or 'PersonalMultiple'). Default is 1.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid token

  /jatos/api/results:
    post:
      summary: "Get results (metadata, data, and files) packed in a zip file"
      description: "Select results by specifying one or multiple of: study IDs, component IDs, batch IDs, group IDs,
          study result IDs, and component result IDs. You can use single IDs, list of IDs, ranges, or a combination of
          all three. If the IDs do not exist in the DB or you have no permission to access them the results are just
          left out."
      tags:
        - results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                studyIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                studyResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                batchIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                groupIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
            examples:
              studyIds:
                summary: Using a study ID
                value:
                  studyIds: 1
              batchIds:
                summary: Using a list of batch IDs
                value:
                  studyIds: [1,2,3]
              componentIds:
                summary: Using a list of component IDs
                value:
                  componentIds: [1,2,3]
              listOfcomponentResultIds:
                summary: Using a list of component result IDs
                value:
                  componentResultIds: [1,2,3]
              rangeOfcomponentResultIds:
                summary: Using a range of component result IDs
                value:
                  componentResultIds: "1-10"
              mixOfcomponentResultIds:
                summary: Using a mix of single IDs and ranges of IDs
                value:
                  componentResultIds: "1-10, 12, 15, 20-15"
              listOfstudyResultIds:
                summary: Using only study result IDs
                value:
                  studyResultIds: [1,2,3]
              combinationOfAll:
                summary: Using a combination of ID types with single IDs and ID ranges
                value:
                  batchId: [1,2,3]
                  componentResultIds: "1-10, 12, 15, 20-15"
                  studyResultIds: [1,2,3]
      responses:
        200:
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
        401:
          description: Invalid token

  /jatos/api/results/metadata:
    post:
      summary: "Get metadata of results in JSON"
      description: "Select results by specifying one or multiple of: study IDs, component IDs, batch IDs, group IDs,
          study result IDs, and component result IDs. You can use single IDs, list of IDs, ranges, or a combination of
          all three. If the IDs do not exist in the DB or you have no permission to access them the results are just
          left out."
      tags:
        - results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                studyIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                studyResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                batchIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                groupIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
            examples:
              studyIds:
                summary: Using a study ID
                value:
                  studyIds: 1
              batchIds:
                summary: Using a list of batch IDs
                value:
                  studyIds: [1,2,3]
              componentIds:
                summary: Using a list of component IDs
                value:
                  componentIds: [1,2,3]
              listOfcomponentResultIds:
                summary: Using a list of component result IDs
                value:
                  componentResultIds: [1,2,3]
              rangeOfcomponentResultIds:
                summary: Using a range of component result IDs
                value:
                  componentResultIds: "1-10"
              mixOfcomponentResultIds:
                summary: Using a mix of single IDs and ranges of IDs
                value:
                  componentResultIds: "1-10, 12, 15, 20-15"
              listOfstudyResultIds:
                summary: Using only study result IDs
                value:
                  studyResultIds: [1,2,3]
              combinationOfAll:
                summary: Using a combination of ID types with single IDs and ID ranges
                value:
                  batchId: [1,2,3]
                  componentResultIds: "1-10, 12, 15, 20-15"
                  studyResultIds: [1,2,3]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
        401:
          description: Invalid token

  /jatos/api/results/data:
    post:
      summary: Get only the data of results in one text file
      tags:
        - results
      parameters:
        - in: query
          name: asPlainText
          required: false
          allowEmptyValue: true
          schema:
            type: boolean
          description: If set the data will be returned in one text file with each line contains one result data. If not
              set (default) all result data will be returned in a zip package with the usual structure.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                studyIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                studyResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                batchIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                groupIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
            examples:
              studyIds:
                summary: Using a study ID
                value:
                  studyIds: 1
              batchIds:
                summary: Using a list of batch IDs
                value:
                  studyIds: [ 1,2,3 ]
              componentIds:
                summary: Using a list of component IDs
                value:
                  componentIds: [ 1,2,3 ]
              listOfcomponentResultIds:
                summary: Using a list of component result IDs
                value:
                  componentResultIds: [ 1,2,3 ]
              rangeOfcomponentResultIds:
                summary: Using a range of component result IDs
                value:
                  componentResultIds: "1-10"
              mixOfcomponentResultIds:
                summary: Using a mix of single IDs and ranges of IDs
                value:
                  componentResultIds: "1-10, 12, 15, 20-15"
              listOfstudyResultIds:
                summary: Using only study result IDs
                value:
                  studyResultIds: [ 1,2,3 ]
              combinationOfAll:
                summary: Using a combination of ID types with single IDs and ID ranges
                value:
                  batchId: [ 1,2,3 ]
                  componentResultIds: "1-10, 12, 15, 20-15"
                  studyResultIds: [ 1,2,3 ]
      responses:
        200:
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
            application/zip:
              schema:
                type: string
                format: binary
        401:
          description: Invalid token

  /jatos/api/results/files:
    post:
      summary: Get only the files of results in one zip file
      tags:
        - results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                studyIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                componentResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                studyResultIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                batchIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
                groupIds:
                  oneOf:
                    - type: array
                      items:
                        type: integer
                    - type: integer
                    - type: string
            examples:
              studyIds:
                summary: Using a study ID
                value:
                  studyIds: 1
              batchIds:
                summary: Using a list of batch IDs
                value:
                  studyIds: [ 1,2,3 ]
              componentIds:
                summary: Using a list of component IDs
                value:
                  componentIds: [ 1,2,3 ]
              listOfcomponentResultIds:
                summary: Using a list of component result IDs
                value:
                  componentResultIds: [ 1,2,3 ]
              rangeOfcomponentResultIds:
                summary: Using a range of component result IDs
                value:
                  componentResultIds: "1-10"
              mixOfcomponentResultIds:
                summary: Using a mix of single IDs and ranges of IDs
                value:
                  componentResultIds: "1-10, 12, 15, 20-15"
              listOfstudyResultIds:
                summary: Using only study result IDs
                value:
                  studyResultIds: [ 1,2,3 ]
              combinationOfAll:
                summary: Using a combination of ID types with single IDs and ID ranges
                value:
                  batchId: [ 1,2,3 ]
                  componentResultIds: "1-10, 12, 15, 20-15"
                  studyResultIds: [ 1,2,3 ]
      responses:
        200:
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
        401:
          description: Invalid token

  /jatos/api/results/{componentResultId}/data:
    get:
      summary: Get single result data
      tags:
        - results
      parameters:
        - in: path
          name: componentResultId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Component result ID
      responses:
        200:
          description: Success
          content:
            "*":
              schema:
                type: string
        401:
          description: Invalid token

  /jatos/api/results/{componentResultId}/files/{filename}:
    get:
      summary: Get a single result file
      tags:
        - results
      parameters:
        - in: path
          name: componentResultId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Component result ID
        - in: path
          name: filename
          required: true
          schema:
            type: string
          description: Filename
      responses:
        200:
          description: Success
          content:
            "*":
              schema:
                type: string
                format: binary
        401:
          description: Invalid token

  /jatos/api/studyResults/delete:
    put:
      summary: Delete (multiple) study results
      tags:
        - results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                componentResultIds:
                  type: array
                  items:
                    type: integer
                studyResultIds:
                  type: array
                  items:
                    type: integer
                  description: This will also delete the component results that belong to these study results.
              example:
                studyResultIds: [ 1,2,3 ]
      responses:
        200:
          description: Success
        401:
          description: Invalid token
        404:
          description: One of the results does not exist

  /jatos/api/componentResults/delete:
    put:
      summary: Delete (multiple) component results
      tags:
        - results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                componentResultIds:
                  type: array
                  items:
                    type: integer
                studyResultIds:
                  type: array
                  items:
                    type: integer
                  description: This will also delete the component results that belong to these study results.
              example:
                componentResultIds: [ 1,2,3 ]
      responses:
        200:
          description: Success
        401:
          description: Invalid token
        404:
          description: One of the results does not exist


security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer